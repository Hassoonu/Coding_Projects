import pygame
import math
import random

# Setup Display
pygame.init()
WIDTH, HEIGHT = 800, 500

win = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Hangman Man HAngman GAMe,")

# Button variables

RADIUS = 20
GAP = 15
A = 65
letters = []
startx = round((WIDTH - (GAP + RADIUS*2) * 13) /2 )
starty = 375

for i in range(26):
    x = startx + GAP*2 + (RADIUS * 2 + GAP) * (i % 13)
    y = starty + ((i // 13) * (GAP + RADIUS * 2))
    letters.append([x,y, chr(A+i), True])

# Fonts
LETTER_FONT = pygame.font.SysFont('comicsans', 30)
WORD_FONT = pygame.font.SysFont('comicsans', 50)
TITLE_FONT = pygame.font.SysFont('comicsans', 65)

# Load images
images = []
for i in range(7):
    image = pygame.image.load("hangman" + str(i) + ".png")
    images.append(image)

# Game Variables
hangmanStatus = 0
words = ["HELLO", "PYTHON", "HERESEY", "SIMP", "INMYFEELS"]
word = random.choice(words)
guessed = []

# colors

WHITE = (255,255,255)
BLACK = (0,0,0)

# Game Setup
def draw():
    win.fill(WHITE)
    # Draw Title
    text = TITLE_FONT.render("HASAN'S HANGMAN", 1, BLACK)
    win.blit(text, (WIDTH/2 - text.get_width()/2, 15))

    # Draw word
    displayWord = ""
    for letter in word:
        if letter in guessed:
            displayWord += letter + " "
        else:
            displayWord += "_ "
    text = WORD_FONT.render(displayWord, 1, BLACK)
    win.blit(text, (400, 200))

    # draw buttons
    for letter in letters:
        x, y, ltr, visible = letter
        if visible:
            pygame.draw.circle(win, BLACK, (x,y), RADIUS, 3)
            text = LETTER_FONT.render(ltr, 1, BLACK)
            win.blit(text, (x - text.get_width()/2, y - text.get_height()/2))

    
    win.blit(images[hangmanStatus], (150, 100))
    pygame.display.update()




# Setup Gameloop
FPS = 60
clock = pygame.time.Clock()
run = True

def display_message(message):
    pygame.time.delay(1000)
    win.fill(WHITE)
    text = WORD_FONT.render(message, 1, BLACK)
    win.blit(text, (WIDTH/2 - text.get_height()/2, HEIGHT/2 - text.get_height()/2))
    pygame.display.update()
    pygame.time.delay(3000)


# Game Loop
while run:
    clock.tick(FPS)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        
        if event.type == pygame.MOUSEBUTTONDOWN:
            m_x, m_y = pygame.mouse.get_pos()
            
            for letter in letters:
                x, y, ltr, visible = letter
                
                if visible:
                    dis = math.sqrt((x - m_x)**2 + (y - m_y)**2)
                    
                    if dis <= RADIUS:
                        letter[3] = False
                        guessed += letter[2]
                        
                        if ltr not in word:
                            hangmanStatus += 1
    draw()
    
    won = True

    for letter in word:
        if letter not in guessed:
            won = False
            break
    
    if won:
        display_message("You Won!")
        break

    if hangmanStatus == 6:
        display_message("You Lost :,(")
        break

#hints
# while loop in its own function
# call the while loop before end program
# while true the main loop
# ask for retry post main loop, if yes, dont break, if no then break.
# will need to reset guessed word list and choose a new word.
# 

pygame.quit()